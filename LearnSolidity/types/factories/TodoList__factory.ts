/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TodoList } from "../TodoList";

export class TodoList__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TodoList> {
    return super.deploy(overrides || {}) as Promise<TodoList>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TodoList {
    return super.attach(address) as TodoList;
  }
  connect(signer: Signer): TodoList__factory {
    return super.connect(signer) as TodoList__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TodoList {
    return new Contract(address, _abi, signerOrProvider) as TodoList;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_content",
        type: "string",
      },
    ],
    name: "createTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "deleteTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getTask",
    outputs: [
      {
        internalType: "string",
        name: "content",
        type: "string",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTaskCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tasks",
    outputs: [
      {
        internalType: "string",
        name: "content",
        type: "string",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "toggleCompleted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_content",
        type: "string",
      },
    ],
    name: "updateTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061098c806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063560f31921161005b578063560f3192146100d457806386533f6c146100e75780638d977672146100fa578063c17a340e1461010d57600080fd5b8063111002aa146100825780631d65e77e14610097578063455f5024146100c1575b600080fd5b61009561009036600461075e565b61011e565b005b6100aa6100a536600461079b565b610198565b6040516100b89291906107b4565b60405180910390f35b6100956100cf36600461079b565b6102b2565b6100956100e236600461079b565b610338565b6100956100f5366004610811565b61044d565b6100aa61010836600461079b565b6104ab565b6000546040519081526020016100b8565b604080518082019091528181526000602080830182905281546001810183559180528251805160029093027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630192610179928492019061056a565b50602091909101516001909101805460ff191691151591909117905550565b600080546060919083106101c75760405162461bcd60e51b81526004016101be90610858565b60405180910390fd5b600083815481106101da576101da61088f565b9060005260206000209060020201600001600084815481106101fe576101fe61088f565b906000526020600020906002020160010160009054906101000a900460ff16818054610229906108a5565b80601f0160208091040260200160405190810160405280929190818152602001828054610255906108a5565b80156102a25780601f10610277576101008083540402835291602001916102a2565b820191906000526020600020905b81548152906001019060200180831161028557829003601f168201915b5050505050915091509150915091565b60005481106102d35760405162461bcd60e51b81526004016101be90610858565b600081815481106102e6576102e661088f565b60009182526020822060016002909202010154815460ff909116159190839081106103135761031361088f565b60009182526020909120600290910201600101805460ff191691151591909117905550565b60005481106103595760405162461bcd60e51b81526004016101be90610858565b805b60005461036a906001906108f6565b81101561040a57600061037e82600161090d565b8154811061038e5761038e61088f565b9060005260206000209060020201600082815481106103af576103af61088f565b906000526020600020906002020160008201816000019080546103d1906108a5565b6103dc9291906105ee565b506001918201549101805460ff191660ff90921615159190911790558061040281610925565b91505061035b565b50600080548061041c5761041c610940565b6000828152602081206000199092019160028302019061043c8282610669565b50600101805460ff19169055905550565b600054821061046e5760405162461bcd60e51b81526004016101be90610858565b80600083815481106104825761048261088f565b906000526020600020906002020160000190805190602001906104a692919061056a565b505050565b600081815481106104bb57600080fd5b90600052602060002090600202016000915090508060000180546104de906108a5565b80601f016020809104026020016040519081016040528092919081815260200182805461050a906108a5565b80156105575780601f1061052c57610100808354040283529160200191610557565b820191906000526020600020905b81548152906001019060200180831161053a57829003601f168201915b5050506001909301549192505060ff1682565b828054610576906108a5565b90600052602060002090601f01602090048101928261059857600085556105de565b82601f106105b157805160ff19168380011785556105de565b828001600101855582156105de579182015b828111156105de5782518255916020019190600101906105c3565b506105ea9291506106a6565b5090565b8280546105fa906108a5565b90600052602060002090601f01602090048101928261061c57600085556105de565b82601f1061062d57805485556105de565b828001600101855582156105de57600052602060002091601f016020900482015b828111156105de57825482559160010191906001019061064e565b508054610675906108a5565b6000825580601f10610685575050565b601f0160209004906000526020600020908101906106a391906106a6565b50565b5b808211156105ea57600081556001016106a7565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126106e257600080fd5b813567ffffffffffffffff808211156106fd576106fd6106bb565b604051601f8301601f19908116603f01168101908282118183101715610725576107256106bb565b8160405283815286602085880101111561073e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561077057600080fd5b813567ffffffffffffffff81111561078757600080fd5b610793848285016106d1565b949350505050565b6000602082840312156107ad57600080fd5b5035919050565b604081526000835180604084015260005b818110156107e257602081870181015160608684010152016107c5565b818111156107f4576000606083860101525b50921515602083015250601f91909101601f191601606001919050565b6000806040838503121561082457600080fd5b82359150602083013567ffffffffffffffff81111561084257600080fd5b61084e858286016106d1565b9150509250929050565b60208082526019908201527f5461736b20696e646578206f7574206f6620626f756e64732e00000000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806108b957607f821691505b602082108114156108da57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610908576109086108e0565b500390565b60008219821115610920576109206108e0565b500190565b6000600019821415610939576109396108e0565b5060010190565b634e487b7160e01b600052603160045260246000fdfea264697066735822122096dc9576eac42fd6a6d3899e56af3d8aa45dcb57ff613a10195e8c99fb63db9f64736f6c634300080c0033";
