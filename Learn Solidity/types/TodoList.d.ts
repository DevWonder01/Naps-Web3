/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface TodoListInterface extends ethers.utils.Interface {
  functions: {
    "createTask(string)": FunctionFragment;
    "deleteTask(uint256)": FunctionFragment;
    "getTask(uint256)": FunctionFragment;
    "getTaskCount()": FunctionFragment;
    "tasks(uint256)": FunctionFragment;
    "toggleCompleted(uint256)": FunctionFragment;
    "updateTask(uint256,string)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "createTask", values: [string]): string;
  encodeFunctionData(
    functionFragment: "deleteTask",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTask",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTaskCount",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "tasks", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "toggleCompleted",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateTask",
    values: [BigNumberish, string]
  ): string;

  decodeFunctionResult(functionFragment: "createTask", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "deleteTask", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getTask", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getTaskCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "tasks", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "toggleCompleted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "updateTask", data: BytesLike): Result;

  events: {};
}

export class TodoList extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: TodoListInterface;

  functions: {
    createTask(
      _content: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "createTask(string)"(
      _content: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    deleteTask(
      _index: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "deleteTask(uint256)"(
      _index: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getTask(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, boolean] & { content: string; completed: boolean }>;

    "getTask(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, boolean] & { content: string; completed: boolean }>;

    getTaskCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getTaskCount()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    tasks(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, boolean] & { content: string; completed: boolean }>;

    "tasks(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, boolean] & { content: string; completed: boolean }>;

    toggleCompleted(
      _index: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "toggleCompleted(uint256)"(
      _index: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    updateTask(
      _index: BigNumberish,
      _content: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateTask(uint256,string)"(
      _index: BigNumberish,
      _content: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  createTask(
    _content: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "createTask(string)"(
    _content: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  deleteTask(
    _index: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "deleteTask(uint256)"(
    _index: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getTask(
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, boolean] & { content: string; completed: boolean }>;

  "getTask(uint256)"(
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, boolean] & { content: string; completed: boolean }>;

  getTaskCount(overrides?: CallOverrides): Promise<BigNumber>;

  "getTaskCount()"(overrides?: CallOverrides): Promise<BigNumber>;

  tasks(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, boolean] & { content: string; completed: boolean }>;

  "tasks(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[string, boolean] & { content: string; completed: boolean }>;

  toggleCompleted(
    _index: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "toggleCompleted(uint256)"(
    _index: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  updateTask(
    _index: BigNumberish,
    _content: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateTask(uint256,string)"(
    _index: BigNumberish,
    _content: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    createTask(_content: string, overrides?: CallOverrides): Promise<void>;

    "createTask(string)"(
      _content: string,
      overrides?: CallOverrides
    ): Promise<void>;

    deleteTask(_index: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "deleteTask(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getTask(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, boolean] & { content: string; completed: boolean }>;

    "getTask(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, boolean] & { content: string; completed: boolean }>;

    getTaskCount(overrides?: CallOverrides): Promise<BigNumber>;

    "getTaskCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    tasks(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, boolean] & { content: string; completed: boolean }>;

    "tasks(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string, boolean] & { content: string; completed: boolean }>;

    toggleCompleted(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "toggleCompleted(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    updateTask(
      _index: BigNumberish,
      _content: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateTask(uint256,string)"(
      _index: BigNumberish,
      _content: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    createTask(_content: string, overrides?: Overrides): Promise<BigNumber>;

    "createTask(string)"(
      _content: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    deleteTask(_index: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "deleteTask(uint256)"(
      _index: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getTask(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTask(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTaskCount(overrides?: CallOverrides): Promise<BigNumber>;

    "getTaskCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    tasks(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "tasks(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    toggleCompleted(
      _index: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "toggleCompleted(uint256)"(
      _index: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    updateTask(
      _index: BigNumberish,
      _content: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateTask(uint256,string)"(
      _index: BigNumberish,
      _content: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    createTask(
      _content: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "createTask(string)"(
      _content: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    deleteTask(
      _index: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "deleteTask(uint256)"(
      _index: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getTask(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTask(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTaskCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getTaskCount()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    tasks(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tasks(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    toggleCompleted(
      _index: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "toggleCompleted(uint256)"(
      _index: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    updateTask(
      _index: BigNumberish,
      _content: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateTask(uint256,string)"(
      _index: BigNumberish,
      _content: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
